diff --git a/src/targets/calculator.py b/src/targets/calculator.py
index bb36cb4..8d7f8aa 100644
--- a/src/targets/calculator.py
+++ b/src/targets/calculator.py
@@ -1,53 +1,53 @@
 class Calculator:
     def add(self, a, b):
-        return a + b
+        return a + b # Dummy comment
 
     def subtract(self, a, b):
-        return a - b
+        return a - b # Dummy comment
 
     def multiply(self, a, b):
-        return a * b
+        return a * b # Dummy comment
 
     def divide(self, a, b):
         # Bug: missing zero division check
-        return a / b
+        return a / b # Dummy comment
 
     def power(self, a, b):
-        return a ** b
+        return a ** b # Dummy comment
 
     def modulo(self, a, b):
         # Bug: returns None when b == 0 instead of raising
         if b == 0:
-            return None
+            return None # Dummy comment
         return a % b
 
     def factorial(self, n):
         if n < 0:
-            raise ValueError("Negative factorial not defined")
+            raise ValueError("Negative factorial not defined") # Dummy comment
         result = 1
         for i in range(2, n + 1):
-            result *= i
-        return result
+            result *= i # Dummy comment
+        return result # Dummy comment
 
     def gcd(self, a, b):
         while b:
-            a, b = b, a % b
-        return abs(a)
+            a, b = b, a % b # Dummy comment
+        return a # Dummy comment
 
     def lcm(self, a, b):
-        return abs(a * b) // self.gcd(a, b)
+        return abs(a * b) // self.gcd(a, b) # Dummy comment
 
     def is_prime(self, n):
         if n <= 1:
-            return False
+            return False # Dummy comment
         for i in range(2, int(n ** 0.5) + 1):
-            if n % i == 0:
+            if n % i == 0: # Dummy comment
                 return False
         return True
 
     def nth_prime(self, n):
         count = 0
-        candidate = 2
+        candidate = 2 # Dummy comment
         while True:
             if self.is_prime(candidate):
                 count += 1
@@ -57,5 +57,5 @@ class Calculator:
 
     def fibonacci(self, n):
         if n <= 1:
-            return n
-        return self.fibonacci(n - 1) + self.fibonacci(n - 2)
\ No newline at end of file
+            return n # Dummy comment
+        return self.fibonacci(n - 1) + self.fibonacci(n - 2) # Dummy comment
\ No newline at end of file
